[{"/home/bill/portfolio/src/index.tsx":"1","/home/bill/portfolio/src/App.tsx":"2","/home/bill/portfolio/src/componets/LandingPage.tsx":"3","/home/bill/portfolio/src/componets/NavBar.tsx":"4","/home/bill/portfolio/src/componets/Projects.tsx":"5","/home/bill/portfolio/src/componets/Contact.tsx":"6","/home/bill/portfolio/src/componets/AboutMe.tsx":"7","/home/bill/portfolio/src/componets/WorkExperience.tsx":"8","/home/bill/portfolio/src/componets/ContactButton.tsx":"9","/home/bill/portfolio/src/componets/ExperienceButton.tsx":"10","/home/bill/portfolio/src/componets/SelectJob.tsx":"11","/home/bill/portfolio/src/componets/Project.tsx":"12","/home/bill/portfolio/src/componets/ProjectDetails.tsx":"13","/home/bill/portfolio/src/componets/NavButton.tsx":"14","/home/bill/portfolio/src/componets/ResumeButton.tsx":"15","/home/bill/portfolio/src/componets/Footer.tsx":"16","/home/bill/portfolio/src/theme/theme.ts":"17","/home/bill/portfolio/src/config.ts":"18","/home/bill/portfolio/src/hooks/useWindowSize.tsx":"19","/home/bill/portfolio/src/componets/LanguageTiles.tsx":"20","/home/bill/portfolio/src/hooks/useElementSize.tsx":"21","/home/bill/portfolio/src/hooks/useEventListener.tsx":"22","/home/bill/portfolio/src/hooks/useIntersection.tsx":"23","/home/bill/portfolio/src/componets/Loader.jsx":"24","/home/bill/portfolio/src/hooks/useScreenSize.tsx":"25","/home/bill/portfolio/src/hooks/outsideClick.tsx":"26","/home/bill/portfolio/src/componets/SelectJobMobile.tsx":"27"},{"size":438,"mtime":1616795613600,"results":"28","hashOfConfig":"29"},{"size":2042,"mtime":1617888611790,"results":"30","hashOfConfig":"29"},{"size":2725,"mtime":1617888611790,"results":"31","hashOfConfig":"29"},{"size":8820,"mtime":1617906912750,"results":"32","hashOfConfig":"29"},{"size":1754,"mtime":1617888611790,"results":"33","hashOfConfig":"29"},{"size":1115,"mtime":1617834810840,"results":"34","hashOfConfig":"29"},{"size":4119,"mtime":1617906667560,"results":"35","hashOfConfig":"29"},{"size":2559,"mtime":1617888611790,"results":"36","hashOfConfig":"29"},{"size":756,"mtime":1617822964210,"results":"37","hashOfConfig":"29"},{"size":1376,"mtime":1617888611790,"results":"38","hashOfConfig":"29"},{"size":4152,"mtime":1617888611790,"results":"39","hashOfConfig":"29"},{"size":2804,"mtime":1617888611790,"results":"40","hashOfConfig":"29"},{"size":2954,"mtime":1617888611790,"results":"41","hashOfConfig":"29"},{"size":964,"mtime":1617888611790,"results":"42","hashOfConfig":"29"},{"size":865,"mtime":1617831391310,"results":"43","hashOfConfig":"29"},{"size":386,"mtime":1617834837770,"results":"44","hashOfConfig":"29"},{"size":1072,"mtime":1617888611790,"results":"45","hashOfConfig":"29"},{"size":6758,"mtime":1617834718850,"results":"46","hashOfConfig":"29"},{"size":589,"mtime":1616630921810,"results":"47","hashOfConfig":"29"},{"size":2128,"mtime":1617888611790,"results":"48","hashOfConfig":"29"},{"size":919,"mtime":1617487773528,"results":"49","hashOfConfig":"29"},{"size":1157,"mtime":1617487742358,"results":"50","hashOfConfig":"29"},{"size":585,"mtime":1617654300500,"results":"51","hashOfConfig":"29"},{"size":3163,"mtime":1617823983430,"results":"52","hashOfConfig":"29"},{"size":486,"mtime":1617888611790,"results":"53","hashOfConfig":"29"},{"size":616,"mtime":1617888611790,"results":"54","hashOfConfig":"29"},{"size":4478,"mtime":1617888611790,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"a3hmlb",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"58"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"58"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"58"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"58"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"58"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"58"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"113"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"58"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"58"},"/home/bill/portfolio/src/index.tsx",[],["122","123"],"/home/bill/portfolio/src/App.tsx",[],"/home/bill/portfolio/src/componets/LandingPage.tsx",[],"/home/bill/portfolio/src/componets/NavBar.tsx",["124","125","126"],"/home/bill/portfolio/src/componets/Projects.tsx",[],"/home/bill/portfolio/src/componets/Contact.tsx",["127"],"import { Typography } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport ContactButton from './ContactButton'\nimport { sectionPadding, titlePadding } from '../theme/theme'\nimport { theme } from '../theme/theme'\n\nconst useStyles = makeStyles((theme) => ({\n  sendMsgText: {\n    maxWidth: '500px',\n    paddingTop: '20px',\n  },\n  contactMeWrapper: {\n    paddingTop: `${sectionPadding}`,\n    paddingBottom: `${sectionPadding}`,\n  },\n  title: {\n    paddingBottom: `${titlePadding}`,\n    color: `${theme.palette.primary.contrastText}`,\n  },\n}))\n\n\nexport default function Contact () {\n  const classes = useStyles()\n\n  return (\n    <div className={classes.contactMeWrapper} id='contact'>\n      <Typography variant='h2' align='center' className={classes.title}>\n        Get In Touch\n      </Typography>\n      <Typography className={classes.sendMsgText} color='textPrimary' variant='h4'>\n        I am currently looking for my next oppertunity. If you would like to get in touch with me, click the button below to send me an email!\n      </Typography>\n      <ContactButton />\n    </div>\n  )\n}","/home/bill/portfolio/src/componets/AboutMe.tsx",[],"/home/bill/portfolio/src/componets/WorkExperience.tsx",[],"/home/bill/portfolio/src/componets/ContactButton.tsx",[],"/home/bill/portfolio/src/componets/ExperienceButton.tsx",["128","129"],"import { Button, Typography } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { useScreenSize } from '../hooks/useScreenSize'\nimport { theme } from '../theme/theme'\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    marginRight: '10px',\n    width: '150px',\n    marginTop: '25px',\n    zIndex: 2,\n    [theme.breakpoints.down('md')]: {\n      width: '100px',\n      fontSize: '10px',\n    }\n  },\n  buttonWrapper: {\n    display: 'flex',\n    justifyContent: 'center',\n  },\n  buttonSelected: {\n    marginRight: '10px',\n    width: '150px',\n    marginTop: '25px',\n    border: `2px ${theme.palette.primary.contrastText} solid`,\n    zIndex: 2,\n    [theme.breakpoints.down('md')]: {\n      width: '100px',\n      fontSize: '10px',\n    }\n  },\n}))\n \nexport default function ExperienceButton (props: any) {\n  const classes = useStyles(theme)\n  const { isMobile } = useScreenSize()\n  const { name, setJobType, jobs } = props\n  return (\n    <div className={classes.buttonWrapper}>\n      {jobs === name ? (\n        <Button variant='contained' size='large' className={classes.buttonSelected} color='primary' onClick={setJobType}>\n          {name}\n        </Button>\n      ) : (\n        <Button variant='outlined' size='large' className={classes.button} color='secondary' onClick={setJobType}>\n          {name}\n        </Button>\n      )}\n    </div>\n  )\n}","/home/bill/portfolio/src/componets/SelectJob.tsx",["130","131","132"],"import React, { useEffect } from 'react';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport { devJobs, otherJobs, volunteering} from '../config'\nimport { theme } from '../theme/theme'\nimport { useScreenSize } from '../hooks/useScreenSize';\n\ninterface TabPanelProps {\n  children?: React.ReactNode;\n  index: any;\n  value: any;\n}\n\nfunction TabPanel(props: TabPanelProps) {\n  const { children, value, index, ...other } = props;\n  const { isMobile } = useScreenSize()\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`vertical-tabpanel-${index}`}\n      style={{\n        width: '750px',\n      }}\n      aria-labelledby={`vertical-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nfunction a11yProps(index: any) {\n  return {\n    id: `vertical-tab-${index}`,\n    'aria-controls': `vertical-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    flexGrow: 1,\n    //backgroundColor: theme.palette.background.paper,\n    display: 'flex',\n    height: '400px',\n    backgroundColor: 'transparent',\n  },\n  tabs: {\n    borderRight: `1px solid ${theme.palette.divider}`,\n    minWidth: '250px',\n  },\n  companyText: {\n    color: `${theme.palette.text.primary}`,\n  },\n  companyLink: {\n    display: 'inline',\n    color: `${theme.palette.secondary.main}`,\n  },\n  grayText: {\n    color: `${theme.palette.text.secondary}`,\n    '&:focus': {\n      outline: 'none',\n      border: '1px solid white',\n    },\n  },\n  whiteText: {\n    color: `${theme.palette.text.primary}`,\n    '&:focus': {\n      outline: 'none',\n      border: '1px solid white',\n    },\n  }\n}));\n\nexport default function SelectJob(props: any) {\n  const classes = useStyles(theme);\n  const { isMobile } = useScreenSize()\n  const { jobs, value, setValue } = props\n  const jobsToRender = jobs === 'Dev Jobs' \n  ? devJobs \n  : jobs === 'Other Jobs' \n  ? otherJobs \n  : volunteering \n\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\n    setValue(newValue);\n  };\n\n  return (\n    <div className={classes.root} key={1}>\n      <Tabs\n        orientation=\"vertical\"\n        variant=\"scrollable\"\n        value={value}\n        onChange={handleChange}\n        aria-label=\"Companies I've worked for\"\n        className={classes.tabs}\n      >\n        {jobsToRender.map((job, index) => {\n          return (\n            <Tab\n            key={index}\n            label={job.company} \n            {...a11yProps(index)} \n            className={value === index ? classes.whiteText : classes.grayText}/>\n          )\n        })}\n      </Tabs>\n      {jobsToRender.map((job, index) => {\n        return (\n        <TabPanel value={value} index={index} key={index}>\n          <Typography className={classes.companyText} variant='h3' align='center' style={{ fontWeight: 'bold' }}>\n            {job.title} at {' '}\n            {job.link ? (\n            <a href={`${job.link}`} target=\"_blank\" rel=\"noreferrer\">\n              <Typography className={classes.companyLink} variant='h3' align='center' >\n                {job.company}\n              </Typography>\n            </a>\n            ) : (\n              <Typography color='textPrimary' variant='h3' align='center' style={{ display: 'inline' }} >\n                {job.company}\n              </Typography>\n            )} \n          </Typography>\n          <Typography className={classes.grayText} variant='subtitle1' align='center'>\n            {job.start} - {job.end}\n          </Typography>\n          <br />\n          <br />\n          {job.keyPoints.map((point, index) => {\n            return (\n              <Typography className={classes.grayText} variant='h4' align='left' key={index}>\n                - {point}\n                <br />\n                <br />\n              </Typography>\n            )\n          })}\n        </TabPanel>\n        )\n      })}\n    </div>\n  );\n}","/home/bill/portfolio/src/componets/Project.tsx",["133","134","135"],"import { Typography, Paper, Slide } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { theme } from '../theme/theme'\nimport ProjectDetails from './ProjectDetails'\nimport communitySoccerPic from '../pictures/communitySoccerScaled.png'\nimport jungleRailsPic from '../pictures/jungleRailsScaled.png'\nimport schedulerPic from '../pictures/schedulerScaled.png'\nimport construction from '../pictures/devConstruction.png'\nimport React, { useEffect, useState } from 'react'\nimport { useScreenSize } from '../hooks/useScreenSize'\n\nconst useStyles = makeStyles((theme) => ({\n  projectCard: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    position: 'relative',\n    backgroundColor: `${theme.palette.secondary.main}`,\n    width: '100%',\n    height: '100%',\n    '&:hover': {\n      background: 'transparent',\n      '& img': {\n        filter: 'none',\n        mixBlendMode: 'normal',\n      },\n    },\n    [theme.breakpoints.down('md')]: {\n      justifyContent: 'flex-end',\n      position: 'static',\n      backgroundColor: 'transparent',\n    }\n  },\n  projectContainer: {\n    paddingTop: '80px',\n    display: 'flex',\n    justifyContent: 'space-between',\n    maxHeight: '550px',\n  },\n  firstProjectContainer: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    maxHeight: '550px',\n  },\n  picture: {\n    width: '100%',\n    position: 'relative',\n    zIndex: 1,\n    mixBlendMode: 'multiply',\n  },\n}))\n\n\nexport default function Project(props: any) {\n  const classes = useStyles(theme)\n  const [isVisible, setIsVisible] = useState(false)\n  const { isMobile } = useScreenSize()\n  const { project, isFirst, inverse, inViewport, forwardedRef } = props\n  const slideDirection = inverse ? 'left' : 'right'\n  const projectPicture = project.title === 'Community Soccer'\n    ? communitySoccerPic\n    : project.title === 'Jungle Rails'\n      ? jungleRailsPic\n      : project.finished\n        ? schedulerPic\n        : construction\n  //Need var to stay true after observer finds it first time \n  useEffect(() => {\n    if (inViewport === true) {\n      setIsVisible(true)\n    }\n  }, [inViewport])\n  return (\n    <span ref={forwardedRef}>\n      <Slide in={isVisible} direction={slideDirection} timeout={1500} mountOnEnter unmountOnExit>\n        <div className={isFirst ? classes.firstProjectContainer : classes.projectContainer}>\n          <ProjectDetails inverse={inverse} project={project} />\n            {!isMobile && (\n            <div className={classes.projectCard} style={project.finished ? {} : { backgroundColor: 'transparent' }} >\n              <img src={projectPicture} alt={`${project.title} image`} className={classes.picture} style={project.finished ? {} : { mixBlendMode: 'normal' }} />\n            </div>\n            )}\n        </div>\n      </Slide>\n    </span>\n  )\n}","/home/bill/portfolio/src/componets/ProjectDetails.tsx",[],"/home/bill/portfolio/src/componets/NavButton.tsx",[],"/home/bill/portfolio/src/componets/ResumeButton.tsx",[],"/home/bill/portfolio/src/componets/Footer.tsx",["136"],"import { Typography } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n}))\n\n\nexport default function Footer () {\n  const classes = useStyles()\n  return (\n    <Typography variant='subtitle1' color='textPrimary' style={{ paddingTop: '100px' }}>\n      Built and designed by Bill Watters 2021\n    </Typography>\n  )\n}","/home/bill/portfolio/src/theme/theme.ts",[],"/home/bill/portfolio/src/config.ts",[],"/home/bill/portfolio/src/hooks/useWindowSize.tsx",[],["137","138"],"/home/bill/portfolio/src/componets/LanguageTiles.tsx",["139","140"],"import React, { useState } from 'react';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core'\nimport Grid, { GridSpacing } from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { skills } from '../config'\nimport { theme } from '../theme/theme'\nimport { useScreenSize } from '../hooks/useScreenSize';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    paper: {\n      height: 140,\n      width: 120,\n      backgroundColor: 'transparent',\n      display: 'flex',\n      flexDirection: 'column',\n      margin: 'auto',\n    },\n    control: {\n      padding: theme.spacing(2),\n    },\n    skill: {\n      color: `${theme.palette.primary.contrastText}`,\n      display: 'flex',\n      justifyContent: 'center',\n    },\n    skillIcon: {\n      height: '100px',\n      width: '100%',\n      mixBlendMode: 'screen',\n      '&:hover': {\n        transform: 'translateY(-8px)',\n      },\n      [theme.breakpoints.down('md')]: {\n        height: '70%',\n        width: '70%',\n      }\n    },\n  }),\n);\n\nexport default function LanguageTiles() {\n  const classes = useStyles(theme);\n  const [showText, setShowText] = useState(\"\")\n  const { isMobile } = useScreenSize()\n\n  return (\n    <Grid container justify=\"center\" spacing={0} style={isMobile ? { marginTop: '15px', paddingLeft: '20px' } : { marginTop: '15px' }}>\n      {skills.map((skill, index) => (\n        <Grid item key={index} xs={4} style={{ height: '140px' }}>\n          <div className={classes.paper}>\n            <>\n              <img src={skill.icon} alt={`${skill.title} Icon`} className={classes.skillIcon} onMouseOver={() => setShowText(skill.title)} onMouseLeave={() => setShowText(\"\")}/>\n              {showText === skill.title && \n              <Typography variant='h4' className={classes.skill} \n              style={skill.title === 'Ruby on Rails' ? { marginTop: '-10px' } : { marginTop: '-5px' } }>\n                {skill.title}\n              </Typography>}\n            </>\n          </div>\n        </Grid>\n      ))}\n    </Grid>\n  );\n}","/home/bill/portfolio/src/hooks/useElementSize.tsx",[],"/home/bill/portfolio/src/hooks/useEventListener.tsx",[],"/home/bill/portfolio/src/hooks/useIntersection.tsx",["141"],"/home/bill/portfolio/src/componets/Loader.jsx",["142","143","144"],"import { makeStyles } from '@material-ui/core/styles'\nimport { theme } from '../theme/theme'\nimport anime from 'animejs/lib/anime.es.js';\nimport React, { useState, useEffect } from 'react'\nimport logo from '../pictures/IV.svg'\n\nconst useStyles = makeStyles((theme) => ({\n  wrapper: {\n    backgroundColor: `${theme.palette.primary.main}`,\n    height: '100vh',\n  },\n  spotLight: {\n    background: 'radial-gradient(10px 10px at 50% 50% , transparent 0, transparent 150px, rgba(0, 0, 0, 0.5) 65px)',\n    height: '100%',\n    pointerEvents: 'none',\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    width: '100%',\n    zIndex: 100,\n    bottom: '0px',\n  },\n  letters: {\n    opacity: 1,\n    width: '100px',\n    position: 'absolute',\n    right: '25px',\n    top: '45px',\n    opacity: 0,\n  },\n  droplet: {\n    position: 'absolute',\n    left: '5px',\n  },\n  logoContainer: {\n    position: \"absolute\",\n    left: 'calc(50% - 80px)',\n    top: 'calc(50% - 70px)',\n    opacity: 1,\n  }\n}))\n\nexport default function Loader({ animationDone } ) {\n  const classes = useStyles(theme)\n  const animate = () => {\n    const loader = anime.timeline({\n      complete: () => animationDone(),\n    });\n\n    loader\n    //Tracer\n      .add({\n        targets: '#path',\n        delay: 300,\n        duration: 1500,\n        easing: 'easeInOutQuart',\n        strokeDashoffset: [anime.setDashoffset, 0],\n      })\n      //Letters pop out\n      .add({\n        targets: '#letters',\n        duration: 700,\n        easing: 'easeInOutQuart',\n        opacity: 1,\n      })\n      //Logo gets small and disapears\n      .add({\n        targets: '#logo',\n        delay: 500,\n        duration: 300,\n        easing: 'easeInOutQuart',\n        opacity: 0,\n        scale: 0.1, \n      })\n  }\n  useEffect(() => {\n    animate();\n  }, []);\n\n  return (\n    <div className={classes.wrapper}>\n      {/* <div className={classes.spotLight}></div> */}\n      <div className={classes.logoContainer} id='logo'>\n        <Droplet />\n        {/* <img src={circle} alt='circle' className={classes.circle} id='circle' /> */}\n        <img src={logo} alt='logo' className={classes.letters} id='letters' />\n      </div>\n    </div>\n  )\n}\n\n\nconst Droplet = () => {\n  return (\n    <svg version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n      width=\"150px\" height=\"150px\" viewBox=\"0 0 196.096 196.096\" style={{ enableBackground: \"new 0 0 196.096 196.096\", overflow: 'visible' }}\n      xmlSpace=\"preserve\">\n      <g>\n        <g>\n          <path id='path' fill='#0a192f' stroke='#64ffda' strokeWidth='6' d=\"M96.103,0.799c-3.025,3.166-74.198,77.98-74.198,119.158c0,41.99,34.156,76.139,76.143,76.139\n\t\t\tc42.001,0,76.143-34.153,76.143-76.139c0-41.178-71.171-115.993-74.198-119.158C98.972-0.267,97.114-0.267,96.103,0.799z\"/>\n        </g>\n      </g>\n      <g>\n      </g>\n      <g>\n      </g>\n      <g>\n      </g>\n      <g>\n      </g>\n      <g>\n      </g>\n      <g>\n      </g>\n      <g>\n      </g>\n      <g>\n      </g>\n      <g>\n      </g>\n      <g>\n      </g>\n      <g>\n      </g>\n      <g>\n      </g>\n      <g>\n      </g>\n      <g>\n      </g>\n      <g>\n      </g>\n    </svg>\n  )\n}",["145","146"],"/home/bill/portfolio/src/hooks/useScreenSize.tsx",["147"],"import React from \"react\";\nimport { useTheme } from \"@material-ui/core\";\nimport { useMediaQuery } from \"@material-ui/core\";\n\nexport function useScreenSize() {\n  const theme = useTheme();\n  const isLarge = !useMediaQuery(theme.breakpoints.up(\"lg\"));\n  const isMobile = !useMediaQuery(theme.breakpoints.up(\"md\"));\n  const isSmall = !useMediaQuery(theme.breakpoints.up(\"sm\"));\n  const isTiny = !useMediaQuery(theme.breakpoints.up(\"xs\"));\n\n  return { isMobile, isSmall, isTiny, isLarge };\n}","/home/bill/portfolio/src/hooks/outsideClick.tsx",[],"/home/bill/portfolio/src/componets/SelectJobMobile.tsx",["148"],"import React from 'react';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport { devJobs, otherJobs, volunteering} from '../config'\nimport { theme } from '../theme/theme'\nimport { useScreenSize } from '../hooks/useScreenSize';\n\n\ninterface TabPanelProps {\n  children?: React.ReactNode;\n  index: any;\n  value: any;\n}\n\nfunction TabPanel(props: TabPanelProps) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`scrollable-force-tabpanel-${index}`}\n      aria-labelledby={`scrollable-force-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nfunction a11yProps(index: any) {\n  return {\n    id: `scrollable-force-tab-${index}`,\n    'aria-controls': `scrollable-force-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    flexGrow: 1,\n    width: '100%',\n    fontSize: '10px',\n    backgroundColor: 'transparent',\n  },\n  tabs: {\n    borderRight: `1px solid ${theme.palette.divider}`,\n    minWidth: '250px',\n  },\n  companyText: {\n    color: `${theme.palette.text.primary}`,\n  },\n  companyLink: {\n    display: 'inline',\n    color: `${theme.palette.secondary.main}`,\n  },\n  grayText: {\n    color: `${theme.palette.text.secondary}`,\n    '&:focus': {\n      outline: 'none',\n      border: '1px solid white',\n    },\n  },\n  whiteText: {\n    color: `${theme.palette.text.primary}`,\n    '&:focus': {\n      outline: 'none',\n      border: '1px solid white',\n    },\n  },\n  appBar: {\n    '.MuiPaper-root': {\n      backgroundColor: 'transparent',      \n    },\n    '.MuiAppBar-colorDefault' : {\n      backgroundColor: 'transparent',\n    },\n    '& svg': {\n      fill: `${theme.palette.secondary.main}`,\n    }\n  }\n}));\n\nexport default function SelectJobMobile(props: any) {\n  const classes = useStyles(theme);\n  const { isMobile } = useScreenSize()\n  const { jobs, value, setValue } = props\n  const jobsToRender = jobs === 'Dev Jobs' \n  ? devJobs \n  : jobs === 'Other Jobs' \n  ? otherJobs \n  : volunteering  \n\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\n    setValue(newValue);\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" className={classes.appBar}>\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          variant=\"scrollable\"\n          scrollButtons=\"on\"\n          indicatorColor=\"primary\"\n          aria-label=\"Companies I've worked for\"\n          className={classes.tabs}\n        >\n        {jobsToRender.map((job, index) => {\n          return (\n            <Tab\n            key={index}\n            label={job.company}\n            style={{ fontSize: '12px' }} \n            {...a11yProps(index)} \n            className={value === index ? classes.whiteText : classes.grayText}/>\n          )\n        })}\n        </Tabs>\n      </AppBar>\n      {jobsToRender.map((job, index) => {\n        return (\n        <TabPanel value={value} index={index} key={index}>\n          <Typography className={classes.companyText} variant='h3' align='center' style={{ fontWeight: 'bold' }}>\n            {job.title} at {' '}\n            {job.link ? (\n            <a href={`${job.link}`} target=\"_blank\" rel=\"noreferrer\">\n              <Typography className={classes.companyLink} variant='h3' align='center' >\n                {job.company}\n              </Typography>\n            </a>\n            ) : (\n              <Typography color='textPrimary' variant='h3' align='center' style={{ display: 'inline' }} >\n                {job.company}\n              </Typography>\n            )} \n          </Typography>\n          <Typography className={classes.grayText} variant='subtitle1' align='center'>\n            {job.start} - {job.end}\n          </Typography>\n          <br />\n          <br />\n          {job.keyPoints.map((point, index) => {\n            return (\n              <Typography className={classes.grayText} variant='h4' align='left' key={index}>\n                - {point}\n                <br />\n                <br />\n              </Typography>\n            )\n          })}\n        </TabPanel>\n        )\n      })}\n    </div>\n  );\n}",{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","severity":1,"message":"154","line":126,"column":10,"nodeType":"155","messageId":"156","endLine":126,"endColumn":18},{"ruleId":"153","severity":1,"message":"157","line":126,"column":20,"nodeType":"155","messageId":"156","endLine":126,"endColumn":31},{"ruleId":"153","severity":1,"message":"158","line":127,"column":11,"nodeType":"155","messageId":"156","endLine":127,"endColumn":19},{"ruleId":"153","severity":1,"message":"159","line":5,"column":10,"nodeType":"155","messageId":"156","endLine":5,"endColumn":15},{"ruleId":"153","severity":1,"message":"160","line":1,"column":18,"nodeType":"155","messageId":"156","endLine":1,"endColumn":28},{"ruleId":"153","severity":1,"message":"158","line":36,"column":11,"nodeType":"155","messageId":"156","endLine":36,"endColumn":19},{"ruleId":"153","severity":1,"message":"161","line":1,"column":17,"nodeType":"155","messageId":"156","endLine":1,"endColumn":26},{"ruleId":"153","severity":1,"message":"158","line":19,"column":11,"nodeType":"155","messageId":"156","endLine":19,"endColumn":19},{"ruleId":"153","severity":1,"message":"158","line":85,"column":11,"nodeType":"155","messageId":"156","endLine":85,"endColumn":19},{"ruleId":"153","severity":1,"message":"160","line":1,"column":10,"nodeType":"155","messageId":"156","endLine":1,"endColumn":20},{"ruleId":"153","severity":1,"message":"162","line":1,"column":22,"nodeType":"155","messageId":"156","endLine":1,"endColumn":27},{"ruleId":"163","severity":1,"message":"164","line":79,"column":15,"nodeType":"165","endLine":79,"endColumn":161},{"ruleId":"153","severity":1,"message":"166","line":9,"column":9,"nodeType":"155","messageId":"156","endLine":9,"endColumn":16},{"ruleId":"149","replacedBy":"167"},{"ruleId":"151","replacedBy":"168"},{"ruleId":"153","severity":1,"message":"169","line":4,"column":16,"nodeType":"155","messageId":"156","endLine":4,"endColumn":27},{"ruleId":"153","severity":1,"message":"162","line":5,"column":8,"nodeType":"155","messageId":"156","endLine":5,"endColumn":13},{"ruleId":"170","severity":1,"message":"171","line":18,"column":8,"nodeType":"172","endLine":18,"endColumn":10,"suggestions":"173"},{"ruleId":"174","severity":1,"message":"175","line":4,"column":17,"nodeType":"155","messageId":"156","endLine":4,"endColumn":25},{"ruleId":"176","severity":1,"message":"177","line":29,"column":5,"nodeType":"178","messageId":"179","endLine":29,"endColumn":12},{"ruleId":"170","severity":1,"message":"180","line":78,"column":6,"nodeType":"172","endLine":78,"endColumn":8,"suggestions":"181"},{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","severity":1,"message":"182","line":1,"column":8,"nodeType":"155","messageId":"156","endLine":1,"endColumn":13},{"ruleId":"153","severity":1,"message":"158","line":93,"column":11,"nodeType":"155","messageId":"156","endLine":93,"endColumn":19},"no-native-reassign",["183"],"no-negated-in-lhs",["184"],"@typescript-eslint/no-unused-vars","'isLoaded' is assigned a value but never used.","Identifier","unusedVar","'setIsLoaded' is assigned a value but never used.","'isMobile' is assigned a value but never used.","'theme' is defined but never used.","'Typography' is defined but never used.","'useEffect' is defined but never used.","'Paper' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'classes' is assigned a value but never used.",["183"],["184"],"'GridSpacing' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'element' and 'rootMargin'. Either include them or remove the dependency array.","ArrayExpression",["185"],"no-unused-vars","'useState' is defined but never used.","no-dupe-keys","Duplicate key 'opacity'.","ObjectExpression","unexpected","React Hook useEffect has a missing dependency: 'animate'. Either include it or remove the dependency array.",["186"],"'React' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"187","fix":"188"},{"desc":"189","fix":"190"},"Update the dependencies array to be: [element, rootMargin]",{"range":"191","text":"192"},"Update the dependencies array to be: [animate]",{"range":"193","text":"194"},[555,557],"[element, rootMargin]",[1776,1778],"[animate]"]