[{"/home/bill/portfolio/src/index.tsx":"1","/home/bill/portfolio/src/App.tsx":"2","/home/bill/portfolio/src/componets/LandingPage.tsx":"3","/home/bill/portfolio/src/componets/NavBar.tsx":"4","/home/bill/portfolio/src/componets/Projects.tsx":"5","/home/bill/portfolio/src/componets/Contact.tsx":"6","/home/bill/portfolio/src/componets/AboutMe.tsx":"7","/home/bill/portfolio/src/componets/WorkExperience.tsx":"8","/home/bill/portfolio/src/componets/ContactButton.tsx":"9","/home/bill/portfolio/src/componets/ExperienceButton.tsx":"10","/home/bill/portfolio/src/componets/SelectJob.tsx":"11","/home/bill/portfolio/src/componets/Project.tsx":"12","/home/bill/portfolio/src/componets/ProjectDetails.tsx":"13","/home/bill/portfolio/src/componets/NavButton.tsx":"14","/home/bill/portfolio/src/componets/ResumeButton.tsx":"15","/home/bill/portfolio/src/componets/Footer.tsx":"16","/home/bill/portfolio/src/theme/theme.ts":"17","/home/bill/portfolio/src/config.ts":"18","/home/bill/portfolio/src/componets/SelectJobOld.tsx":"19","/home/bill/portfolio/src/hooks/useWindowSize.tsx":"20","/home/bill/portfolio/src/componets/LanguageTiles.tsx":"21"},{"size":438,"mtime":1616795613600,"results":"22","hashOfConfig":"23"},{"size":1434,"mtime":1617155141230,"results":"24","hashOfConfig":"23"},{"size":1997,"mtime":1617479049138,"results":"25","hashOfConfig":"23"},{"size":3086,"mtime":1617397117170,"results":"26","hashOfConfig":"23"},{"size":1016,"mtime":1617479662338,"results":"27","hashOfConfig":"23"},{"size":1089,"mtime":1616967042990,"results":"28","hashOfConfig":"23"},{"size":2425,"mtime":1617395937030,"results":"29","hashOfConfig":"23"},{"size":1758,"mtime":1616959517430,"results":"30","hashOfConfig":"23"},{"size":729,"mtime":1617477691078,"results":"31","hashOfConfig":"23"},{"size":1102,"mtime":1617398472330,"results":"32","hashOfConfig":"23"},{"size":3575,"mtime":1617476211758,"results":"33","hashOfConfig":"23"},{"size":1230,"mtime":1617483138848,"results":"34","hashOfConfig":"23"},{"size":1779,"mtime":1617157814320,"results":"35","hashOfConfig":"23"},{"size":741,"mtime":1617479194148,"results":"36","hashOfConfig":"23"},{"size":854,"mtime":1617479315758,"results":"37","hashOfConfig":"23"},{"size":382,"mtime":1615062300150,"results":"38","hashOfConfig":"23"},{"size":1002,"mtime":1617479084938,"results":"39","hashOfConfig":"23"},{"size":6307,"mtime":1617397346640,"results":"40","hashOfConfig":"23"},{"size":801,"mtime":1615062300150,"results":"41","hashOfConfig":"42"},{"size":589,"mtime":1616630921810,"results":"43","hashOfConfig":"23"},{"size":1884,"mtime":1617396253960,"results":"44","hashOfConfig":"23"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},"a3hmlb",{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"47"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"47"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"47"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"47"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"47"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"yrh0lu",{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"47"},"/home/bill/portfolio/src/index.tsx",[],["94","95"],"/home/bill/portfolio/src/App.tsx",[],"/home/bill/portfolio/src/componets/LandingPage.tsx",[],"/home/bill/portfolio/src/componets/NavBar.tsx",["96","97"],"import { makeStyles } from '@material-ui/core/styles'\nimport { Typography, Slide, useScrollTrigger } from '@material-ui/core'\nimport NavButton from './NavButton'\nimport ResumeButton from './ResumeButton'\nimport { Link } from 'react-scroll'\nimport { githubURL, linkedInURL } from '../config'\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport { theme } from '../theme/theme'\nimport useWindowSize from '../hooks/useWindowSize'\n\n\nconst useStyles = makeStyles((theme) => ({\n  navBarContainer: {\n    height: '80px',\n    width: '100vw',\n    display: 'flex',\n    position: 'fixed',\n    top: '0',\n    justifyContent: 'space-between',\n    backgroundColor: `${theme.palette.primary.main}`,\n    zIndex: 99,\n  },\n  resume: {\n    display: 'flex',\n  },\n  scrollToButtons: {\n    display: 'flex',\n  },\n  rightNav: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    width: '20%',\n  },\n  imgScaling: {\n    maxWidth: '100%',\n    height: 'auto',\n  },\n  socials: {\n    display: 'flex',\n  },\n  linkedIn: {\n    fill: 'white',\n    height: '100%', \n    fontSize: 'xxx-large',\n    '&:hover': {\n      fill: `${theme.palette.secondary.main}`,\n    },\n  },\n  github: {\n    fill: 'white', \n    height: '100%', \n    fontSize: '40px', \n    marginLeft: '10px',\n    '&:hover' : {\n      fill: `${theme.palette.secondary.main}`,\n    },\n  },\n  }))\n\nfunction HideOnScroll(props: any) {\n  const { children } = props;\n  const trigger = useScrollTrigger();\n\n  return (\n    <Slide appear={false} direction=\"down\" in={!trigger}>\n      {children}\n    </Slide>\n  );\n}\n\nexport default function NavBar(props: any) {\n  const classes = useStyles(theme)\n  const { width } = useWindowSize()\n  return (\n    <HideOnScroll {...props}>\n      <div className={classes.navBarContainer}>\n        <div id='wrapper' style={{ maxWidth: '1200px', display: 'flex', justifyContent: 'space-between', width: '100%', margin: 'auto' }} >\n          <div className={classes.resume}>\n            <ResumeButton />\n          </div>\n          <div id='scrollButtons' className={classes.scrollToButtons}>\n            <Link activeClass=\"active\" to=\"about\" spy={true} smooth={true} duration={500}>\n              <NavButton name='About' />\n            </Link>\n            <Link activeClass=\"active\" to=\"experience\" spy={true} smooth={true} duration={700}>\n              <NavButton name='Experience' />\n            </Link>\n            <Link activeClass=\"active\" to=\"work\" spy={true} smooth={true} duration={900}>\n              <NavButton name='My Work' />\n            </Link>\n            <Link activeClass=\"active\" to=\"contact\" spy={true} smooth={true} duration={1100}>\n              <NavButton name='Contact' />\n            </Link>\n          </div>\n          <div className={classes.socials}>\n            <a href={`${linkedInURL}`} >\n              <LinkedInIcon className={classes.linkedIn} />\n            </a>\n            <a href={`${githubURL}`} >\n              <GitHubIcon className={classes.github} />\n            </a>\n          </div>\n        </div>\n      </div>\n    </HideOnScroll>\n  )\n}\n","/home/bill/portfolio/src/componets/Projects.tsx",[],"/home/bill/portfolio/src/componets/Contact.tsx",["98"],"import { Typography } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport ContactButton from './ContactButton'\nimport { sectionPadding, titlePadding } from '../theme/theme'\nimport { theme } from '../theme/theme'\n\nconst useStyles = makeStyles((theme) => ({\n  sendMsgText: {\n    maxWidth: '600px',\n    paddingTop: '20px',\n  },\n  contactMeWrapper: {\n    paddingTop: `${sectionPadding}`,\n    paddingBottom: `${sectionPadding}`,\n  },\n  title: {\n    paddingBottom: `${titlePadding}`,\n    color: `${theme.palette.primary.contrastText}`,\n  },\n}))\n\n\nexport default function Contact () {\n  const classes = useStyles()\n\n  return (\n    <div className={classes.contactMeWrapper} id='contact'>\n      <Typography variant='h2' align='center' className={classes.title}>\n        Send Me a Message\n      </Typography>\n      <Typography className={classes.sendMsgText} color='textPrimary' variant='h3'>\n        I am currently looking for oppertunities as of March 2021. Please Contact me via email to get in touch!\n      </Typography>\n      <ContactButton />\n    </div>\n  )\n}","/home/bill/portfolio/src/componets/AboutMe.tsx",[],"/home/bill/portfolio/src/componets/WorkExperience.tsx",["99","100"],"import { makeStyles } from '@material-ui/core/styles'\nimport { Typography } from '@material-ui/core'\nimport ExperinceButton from './ExperienceButton'\nimport { sectionPadding, titlePadding } from '../theme/theme'\nimport SelectJob from './SelectJobOld'\nimport JobInfo from './JobInfoOld'\nimport React, { useState } from 'react'\nimport VerticalTabs from './SelectJob'\nimport { theme } from '../theme/theme'\n\nconst useStyles = makeStyles((theme) => ({\n  buttonWrapper: {\n    display: 'flex',\n    flexDirection: 'row',\n  },\n  jobSelector: {\n    display: 'flex',\n    width: '100%',\n    alignItems: 'flex-end',\n  },\n  workExperienceWrapper: {\n    paddingTop: `${sectionPadding}`,\n    paddingBottom: `${sectionPadding}`,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    width: '100%',\n  }, \n  title: {\n    paddingBottom: `${titlePadding}`,\n    color: `${theme.palette.primary.contrastText}`,\n  },\n})) \n  \n  \nexport default function WorkExperience () {\n  const classes = useStyles(theme)\n  const [jobType, setJobType] = useState('Dev Jobs')\n  return (\n    <div className={classes.workExperienceWrapper} id='experience'>\n      <Typography variant='h2' className={classes.title}>\n        Work Experience\n      </Typography>\n      <div className={classes.buttonWrapper}>\n        <ExperinceButton name='Dev Jobs' setJobType={() => setJobType('Dev Jobs')} jobs={jobType}/>\n        <ExperinceButton name='Other Jobs' setJobType={() => setJobType('Other Jobs')} jobs={jobType}/>\n        <ExperinceButton name='Volunteering' setJobType={() => setJobType('Volunteering')} jobs={jobType}/>\n      </div>\n      <div className={classes.jobSelector}>\n        <div>\n          <VerticalTabs jobs={jobType}/>\n        </div>\n      </div>\n    </div>\n  )\n}","/home/bill/portfolio/src/componets/ContactButton.tsx",[],"/home/bill/portfolio/src/componets/ExperienceButton.tsx",["101"],"import { Button, Typography } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { theme } from '../theme/theme'\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    marginRight: '10px',\n    width: '150px',\n    marginTop: '25px',\n    zIndex: 2,\n  },\n  buttonWrapper: {\n    display: 'flex',\n    justifyContent: 'center',\n  },\n  buttonSelected: {\n    marginRight: '10px',\n    width: '150px',\n    marginTop: '25px',\n    border: `2px ${theme.palette.primary.contrastText} solid`,\n    zIndex: 2,\n  },\n}))\n \nexport default function ExperienceButton (props: any) {\n  const classes = useStyles(theme)\n  const { name, setJobType, jobs } = props\n  return (\n    <div className={classes.buttonWrapper}>\n      {jobs === name ? (\n        <Button variant='contained' size='large' className={classes.buttonSelected} color='primary' onClick={setJobType}>\n          {name}\n        </Button>\n      ) : (\n        <Button variant='outlined' size='large' className={classes.button} color='secondary' onClick={setJobType}>\n          {name}\n        </Button>\n      )}\n    </div>\n  )\n}","/home/bill/portfolio/src/componets/SelectJob.tsx",[],"/home/bill/portfolio/src/componets/Project.tsx",["102","103","104"],"/home/bill/portfolio/src/componets/ProjectDetails.tsx",[],"/home/bill/portfolio/src/componets/NavButton.tsx",[],"/home/bill/portfolio/src/componets/ResumeButton.tsx",["105"],"/home/bill/portfolio/src/componets/Footer.tsx",["106"],"import { Typography } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n}))\n\n\nexport default function Footer () {\n  const classes = useStyles()\n  return (\n    <Typography variant='subtitle1' color='primary' style={{ paddingTop: '100px' }}>\n      Built and Designed by Bill Watters 2021\n    </Typography>\n  )\n}","/home/bill/portfolio/src/theme/theme.ts",[],"/home/bill/portfolio/src/config.ts",[],"/home/bill/portfolio/src/componets/SelectJobOld.tsx",["107","108","109"],"/home/bill/portfolio/src/hooks/useWindowSize.tsx",[],"/home/bill/portfolio/src/componets/LanguageTiles.tsx",["110","111"],"import React, { useState } from 'react';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core'\nimport Grid, { GridSpacing } from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { skills } from '../config'\nimport { theme } from '../theme/theme'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    paper: {\n      height: 140,\n      width: 120,\n      backgroundColor: 'transparent',\n      display: 'flex',\n      flexDirection: 'column',\n      margin: 'auto',\n    },\n    control: {\n      padding: theme.spacing(2),\n    },\n    skill: {\n      color: `${theme.palette.primary.contrastText}`,\n      display: 'flex',\n      justifyContent: 'center',\n    },\n    skillIcon: {\n      height: '100px',\n      width: '100%',\n      mixBlendMode: 'screen',\n      '&:hover': {\n        transform: 'translateY(-8px)',\n      },\n    },\n  }),\n);\n\nexport default function LanguageTiles() {\n  const classes = useStyles(theme);\n  const [showText, setShowText] = useState(\"\")\n\n  return (\n    <Grid container justify=\"center\" spacing={0} style={{ marginTop: '15px' }}>\n      {skills.map((skill, index) => (\n        <Grid item key={index} xs={4} style={{ height: '140px' }}>\n          <div className={classes.paper}>\n            <>\n              <img src={skill.icon} alt={`${skill.title} Icon`} className={classes.skillIcon} onMouseOver={() => setShowText(skill.title)} onMouseLeave={() => setShowText(\"\")}/>\n              {showText === skill.title && \n              <Typography variant='h4' className={classes.skill} \n              style={skill.title === 'Ruby on Rails' ? { marginTop: '-10px' } : { marginTop: '-5px' } }>\n                {skill.title}\n              </Typography>}\n            </>\n          </div>\n        </Grid>\n      ))}\n    </Grid>\n  );\n}",{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","severity":1,"message":"117","line":2,"column":10,"nodeType":"118","messageId":"119","endLine":2,"endColumn":20},{"ruleId":"116","severity":1,"message":"120","line":74,"column":11,"nodeType":"118","messageId":"119","endLine":74,"endColumn":16},{"ruleId":"116","severity":1,"message":"121","line":5,"column":10,"nodeType":"118","messageId":"119","endLine":5,"endColumn":15},{"ruleId":"116","severity":1,"message":"122","line":5,"column":8,"nodeType":"118","messageId":"119","endLine":5,"endColumn":17},{"ruleId":"116","severity":1,"message":"123","line":6,"column":8,"nodeType":"118","messageId":"119","endLine":6,"endColumn":15},{"ruleId":"116","severity":1,"message":"117","line":1,"column":18,"nodeType":"118","messageId":"119","endLine":1,"endColumn":28},{"ruleId":"116","severity":1,"message":"117","line":1,"column":10,"nodeType":"118","messageId":"119","endLine":1,"endColumn":20},{"ruleId":"116","severity":1,"message":"124","line":1,"column":22,"nodeType":"118","messageId":"119","endLine":1,"endColumn":27},{"ruleId":"125","severity":1,"message":"126","line":38,"column":9,"nodeType":"127","endLine":38,"endColumn":95},{"ruleId":"116","severity":1,"message":"128","line":2,"column":22,"nodeType":"118","messageId":"119","endLine":2,"endColumn":28},{"ruleId":"116","severity":1,"message":"129","line":9,"column":9,"nodeType":"118","messageId":"119","endLine":9,"endColumn":16},{"ruleId":"116","severity":1,"message":"117","line":1,"column":10,"nodeType":"118","messageId":"119","endLine":1,"endColumn":20},{"ruleId":"116","severity":1,"message":"124","line":1,"column":22,"nodeType":"118","messageId":"119","endLine":1,"endColumn":27},{"ruleId":"116","severity":1,"message":"129","line":32,"column":9,"nodeType":"118","messageId":"119","endLine":32,"endColumn":16},{"ruleId":"116","severity":1,"message":"130","line":4,"column":16,"nodeType":"118","messageId":"119","endLine":4,"endColumn":27},{"ruleId":"116","severity":1,"message":"124","line":5,"column":8,"nodeType":"118","messageId":"119","endLine":5,"endColumn":13},"no-native-reassign",["131"],"no-negated-in-lhs",["132"],"@typescript-eslint/no-unused-vars","'Typography' is defined but never used.","Identifier","unusedVar","'width' is assigned a value but never used.","'theme' is defined but never used.","'SelectJob' is defined but never used.","'JobInfo' is defined but never used.","'Paper' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'Button' is defined but never used.","'classes' is assigned a value but never used.","'GridSpacing' is defined but never used.","no-global-assign","no-unsafe-negation"]