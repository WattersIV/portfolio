[{"/home/bill/portfolio/src/index.tsx":"1","/home/bill/portfolio/src/App.tsx":"2","/home/bill/portfolio/src/componets/LandingPage.tsx":"3","/home/bill/portfolio/src/componets/NavBar.tsx":"4","/home/bill/portfolio/src/componets/Projects.tsx":"5","/home/bill/portfolio/src/componets/Contact.tsx":"6","/home/bill/portfolio/src/componets/AboutMe.tsx":"7","/home/bill/portfolio/src/componets/WorkExperience.tsx":"8","/home/bill/portfolio/src/componets/ContactButton.tsx":"9","/home/bill/portfolio/src/componets/ExperienceButton.tsx":"10","/home/bill/portfolio/src/componets/SelectJob.tsx":"11","/home/bill/portfolio/src/componets/Project.tsx":"12","/home/bill/portfolio/src/componets/ProjectDetails.tsx":"13","/home/bill/portfolio/src/componets/NavButton.tsx":"14","/home/bill/portfolio/src/componets/ResumeButton.tsx":"15","/home/bill/portfolio/src/componets/Footer.tsx":"16","/home/bill/portfolio/src/theme/theme.ts":"17","/home/bill/portfolio/src/config.ts":"18","/home/bill/portfolio/src/hooks/useWindowSize.tsx":"19","/home/bill/portfolio/src/componets/LanguageTiles.tsx":"20","/home/bill/portfolio/src/hooks/useElementSize.tsx":"21","/home/bill/portfolio/src/hooks/useEventListener.tsx":"22","/home/bill/portfolio/src/hooks/useIntersection.tsx":"23"},{"size":438,"mtime":1616795613600,"results":"24","hashOfConfig":"25"},{"size":1434,"mtime":1617654650250,"results":"26","hashOfConfig":"25"},{"size":2273,"mtime":1617652333290,"results":"27","hashOfConfig":"25"},{"size":3537,"mtime":1617651984430,"results":"28","hashOfConfig":"25"},{"size":1095,"mtime":1617575664450,"results":"29","hashOfConfig":"25"},{"size":1112,"mtime":1617574706560,"results":"30","hashOfConfig":"25"},{"size":3420,"mtime":1617654040700,"results":"31","hashOfConfig":"25"},{"size":2153,"mtime":1617656085470,"results":"32","hashOfConfig":"25"},{"size":729,"mtime":1617477691078,"results":"33","hashOfConfig":"25"},{"size":1102,"mtime":1617398472330,"results":"34","hashOfConfig":"25"},{"size":4018,"mtime":1617585022610,"results":"35","hashOfConfig":"25"},{"size":1766,"mtime":1617575866510,"results":"36","hashOfConfig":"25"},{"size":2512,"mtime":1617575713170,"results":"37","hashOfConfig":"25"},{"size":741,"mtime":1617479194148,"results":"38","hashOfConfig":"25"},{"size":854,"mtime":1617479315758,"results":"39","hashOfConfig":"25"},{"size":382,"mtime":1615062300150,"results":"40","hashOfConfig":"25"},{"size":1002,"mtime":1617574821050,"results":"41","hashOfConfig":"25"},{"size":6313,"mtime":1617562427340,"results":"42","hashOfConfig":"25"},{"size":589,"mtime":1616630921810,"results":"43","hashOfConfig":"25"},{"size":1884,"mtime":1617396253960,"results":"44","hashOfConfig":"25"},{"size":919,"mtime":1617487773528,"results":"45","hashOfConfig":"25"},{"size":1157,"mtime":1617487742358,"results":"46","hashOfConfig":"25"},{"size":585,"mtime":1617654300500,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"a3hmlb",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"50"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/bill/portfolio/src/index.tsx",[],["103","104"],"/home/bill/portfolio/src/App.tsx",[],"/home/bill/portfolio/src/componets/LandingPage.tsx",[],"/home/bill/portfolio/src/componets/NavBar.tsx",["105","106","107","108"],"/home/bill/portfolio/src/componets/Projects.tsx",[],"/home/bill/portfolio/src/componets/Contact.tsx",["109"],"import { Typography } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport ContactButton from './ContactButton'\nimport { sectionPadding, titlePadding } from '../theme/theme'\nimport { theme } from '../theme/theme'\n\nconst useStyles = makeStyles((theme) => ({\n  sendMsgText: {\n    maxWidth: '500px',\n    paddingTop: '20px',\n  },\n  contactMeWrapper: {\n    paddingTop: `${sectionPadding}`,\n    paddingBottom: `${sectionPadding}`,\n  },\n  title: {\n    paddingBottom: `${titlePadding}`,\n    color: `${theme.palette.primary.contrastText}`,\n  },\n}))\n\n\nexport default function Contact () {\n  const classes = useStyles()\n\n  return (\n    <div className={classes.contactMeWrapper} id='contact'>\n      <Typography variant='h2' align='center' className={classes.title}>\n        Get In Touch\n      </Typography>\n      <Typography className={classes.sendMsgText} color='textPrimary' variant='h4'>\n        I am currently looking for oppertunities as of April 2021. You can click on the button below to send me and email and get it touch!\n      </Typography>\n      <ContactButton />\n    </div>\n  )\n}","/home/bill/portfolio/src/componets/AboutMe.tsx",[],"/home/bill/portfolio/src/componets/WorkExperience.tsx",["110","111","112"],"/home/bill/portfolio/src/componets/ContactButton.tsx",[],"/home/bill/portfolio/src/componets/ExperienceButton.tsx",["113"],"import { Button, Typography } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { theme } from '../theme/theme'\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    marginRight: '10px',\n    width: '150px',\n    marginTop: '25px',\n    zIndex: 2,\n  },\n  buttonWrapper: {\n    display: 'flex',\n    justifyContent: 'center',\n  },\n  buttonSelected: {\n    marginRight: '10px',\n    width: '150px',\n    marginTop: '25px',\n    border: `2px ${theme.palette.primary.contrastText} solid`,\n    zIndex: 2,\n  },\n}))\n \nexport default function ExperienceButton (props: any) {\n  const classes = useStyles(theme)\n  const { name, setJobType, jobs } = props\n  return (\n    <div className={classes.buttonWrapper}>\n      {jobs === name ? (\n        <Button variant='contained' size='large' className={classes.buttonSelected} color='primary' onClick={setJobType}>\n          {name}\n        </Button>\n      ) : (\n        <Button variant='outlined' size='large' className={classes.button} color='secondary' onClick={setJobType}>\n          {name}\n        </Button>\n      )}\n    </div>\n  )\n}","/home/bill/portfolio/src/componets/SelectJob.tsx",["114"],"import React, { useEffect } from 'react';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport { devJobs, otherJobs, volunteering} from '../config'\nimport { theme } from '../theme/theme'\n\ninterface TabPanelProps {\n  children?: React.ReactNode;\n  index: any;\n  value: any;\n}\n\nfunction TabPanel(props: TabPanelProps) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`vertical-tabpanel-${index}`}\n      style={{\n        width: '750px',\n      }}\n      aria-labelledby={`vertical-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nfunction a11yProps(index: any) {\n  return {\n    id: `vertical-tab-${index}`,\n    'aria-controls': `vertical-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    flexGrow: 1,\n    //backgroundColor: theme.palette.background.paper,\n    display: 'flex',\n    height: '400px',\n    backgroundColor: 'transparent',\n  },\n  tabs: {\n    borderRight: `1px solid ${theme.palette.divider}`,\n    minWidth: '250px',\n  },\n  companyText: {\n    color: `${theme.palette.text.primary}`,\n  },\n  companyLink: {\n    display: 'inline',\n    color: `${theme.palette.secondary.main}`,\n  },\n  grayText: {\n    color: `${theme.palette.text.secondary}`,\n    '&:focus': {\n      outline: 'none',\n      border: '1px solid white',\n    },\n  },\n  whiteText: {\n    color: `${theme.palette.text.primary}`,\n    '&:focus': {\n      outline: 'none',\n      border: '1px solid white',\n    },\n  }\n}));\n\nexport default function SelectJob(props: any) {\n  const classes = useStyles(theme);\n  const { jobs, value, setValue } = props\n  const jobsToRender = jobs === 'Dev Jobs' \n  ? devJobs \n  : jobs === 'Other Jobs' \n  ? otherJobs \n  : volunteering \n\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\n    setValue(newValue);\n  };\n\n  return (\n    <div className={classes.root} key={1}>\n      <Tabs\n        orientation=\"vertical\"\n        variant=\"scrollable\"\n        value={value}\n        onChange={handleChange}\n        aria-label=\"Companies I've worked for\"\n        className={classes.tabs}\n      >\n        {jobsToRender.map((job, index) => {\n          return (\n            <Tab\n            key={index}\n            label={job.company} \n            {...a11yProps(index)} \n            className={value === index ? classes.whiteText : classes.grayText}/>\n          )\n        })}\n      </Tabs>\n      {jobsToRender.map((job, index) => {\n        return (\n        <TabPanel value={value} index={index} key={index}>\n          <Typography className={classes.companyText} variant='h3' align='center' style={{ fontWeight: 'bold' }}>\n            {job.title} at {' '}\n            {job.link ? (\n            <a href={`${job.link}`} target=\"_blank\" rel=\"noreferrer\">\n              <Typography className={classes.companyLink} variant='h3' align='center' >\n                {job.company}\n              </Typography>\n            </a>\n            ) : (\n              <Typography color='textPrimary' variant='h3' align='center' style={{ display: 'inline' }} >\n                {job.company}\n              </Typography>\n            )} \n          </Typography>\n          <Typography className={classes.grayText} variant='subtitle1' align='center'>\n            {job.start} - {job.end}\n          </Typography>\n          <br />\n          <br />\n          {job.keyPoints.map((point, index) => {\n            return (\n              <Typography className={classes.grayText} variant='h4' align='left' key={index}>\n                - {point}\n                <br />\n                <br />\n              </Typography>\n            )\n          })}\n        </TabPanel>\n        )\n      })}\n    </div>\n  );\n}","/home/bill/portfolio/src/componets/Project.tsx",["115","116","117"],"import { Typography, Paper } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { theme } from '../theme/theme'\nimport ProjectDetails from './ProjectDetails'\nimport communitySoccerPic from '../pictures/communitySoccerScaled.png'\nimport jungleRailsPic from '../pictures/jungleRailsScaled.png'\nimport schedulerPic from '../pictures/schedulerScaled.png'\n\nconst useStyles = makeStyles((theme) => ({\n  projectCard: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    position: 'relative',\n    backgroundColor: `${theme.palette.secondary.main}`,\n    width: '100%',\n    height: '100%',\n    '&:hover': {\n      background: 'transparent',\n      '& img': {\n        filter: 'none',\n        mixBlendMode: 'normal',\n      },\n    },\n  },\n  projectContainer: {\n    paddingTop: '80px',\n    display: 'flex',\n    justifyContent: 'space-between',\n    maxHeight: '550px',\n  },\n  firstProjectContainer: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    maxHeight: '550px',\n  },\n  picture: {\n    width: '100%',\n    position: 'relative',\n    zIndex: 1,\n    mixBlendMode: 'multiply',\n  },\n}))\n\n\nexport default function Project (props: any) {\n  const classes = useStyles(theme)\n  const { project, isFirst, inverse} = props\n  const projectPicture = project.title === 'Community Soccer' \n  ? communitySoccerPic\n  : project.title === 'Jungle Rails'\n  ? jungleRailsPic\n  : schedulerPic\n  console.log(isFirst)\n  return (\n    <div className={isFirst ? classes.firstProjectContainer : classes.projectContainer}>\n      <ProjectDetails inverse={inverse} project={project}/>\n      <div className={classes.projectCard} >\n          <img src={projectPicture} alt={`${project.title} image`} className={classes.picture}/>\n      </div>\n    </div>\n  )\n}","/home/bill/portfolio/src/componets/ProjectDetails.tsx",["118"],"import { Typography, Paper } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport { githubURL } from '../config';\n\nconst useStyles = makeStyles((theme) => ({\n  description: {\n    padding: '20px',\n  },\n  techStack: {\n    display: 'flex',\n    flexDirection: 'row',\n  },\n  techStackContainer: {\n    display: 'flex',\n    flexDirection: 'row',\n    paddingTop: '25px',\n    justifyContent: 'space-around',\n    paddingBottom: '10px',\n  },\n  descriptionContainer: {\n    padding: '20px',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'end',\n    position: 'relative',\n    zIndex: 2,\n    left: '50px',\n  },\n  inverseDescriptionContainer: {\n    order: 2,\n    padding: '20px',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'flex-end',\n    position: 'relative',\n    zIndex: 2,\n    right: '50px',\n  },\n  descriptionCard: {\n    maxWidth: '800px',\n    marginTop: '20px',\n    color: `${theme.palette.text.primary}`,\n    backgroundColor: `${theme.palette.primary.light}`,\n  },\n  brightText: {\n    color: `${theme.palette.primary.contrastText}`,\n  },\n  github: {\n    fill: 'white',\n    '&:hover' : {\n      fill: `${theme.palette.secondary.main}`,\n    },\n  },\n}))\n\n\nexport default function ProjectDetails (props: any) {\n  const classes = useStyles()\n  const { inverse, project } = props\n  return (\n    <div className={ inverse ? classes.inverseDescriptionContainer : classes.descriptionContainer } >\n      <Typography color='textPrimary' variant='h3' align='center' className={classes.brightText}>\n        {project.title}\n      </Typography>\n      <Paper elevation={5} className={classes.descriptionCard}>\n        <Typography color='textSecondary' variant='h4' className={classes.description}>\n          {project.description}\n        </Typography>\n      </Paper>\n      <div className={classes.techStackContainer}>\n        <div className={classes.techStack}>\n          {project.stack.map((tech: any, index: any) => {\n            return (\n              <Typography color='textSecondary' variant='subtitle1' key={index}>\n                {tech} &nbsp;\n              </Typography> \n            )\n          })}\n        </div> \n      </div>\n      <div>\n        { project.githubURL && \n        <a href={`${githubURL}`} aria-label={`${project.title} Github Code`} >\n          <GitHubIcon  className={classes.github}/>\n        </a>}\n      </div>\n    </div>\n\n  )\n}","/home/bill/portfolio/src/componets/NavButton.tsx",[],"/home/bill/portfolio/src/componets/ResumeButton.tsx",["119"],"import { makeStyles } from '@material-ui/core/styles'\nimport { Typography, Button } from '@material-ui/core'\nimport resume from '../documents/resume.pdf'\nimport { theme } from '../theme/theme'\n\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    width: '100px',\n    height: '40px',\n    marginLeft: '10px',\n    backgroundColor: `${theme.palette.primary.main}`,\n  },\n  resumeText: {\n    color: `${theme.palette.primary.contrastText}`,\n    '&:hover': {\n      color: `${theme.palette.secondary.main}`,\n    },\n  },\n}))\n\nexport default function ResumeButton(props: any) {\n  const classes = useStyles(theme)\n  return (\n    <a href={resume} rel=\"noopener noreferrer\" target=\"_blank\" style={{ display: 'flex', alignItems: 'center' }}>\n      <Typography className={classes.resumeText} variant='subtitle1' >\n        RESUME\n      </Typography>\n    </a>\n  )\n}","/home/bill/portfolio/src/componets/Footer.tsx",["120"],"import { Typography } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n}))\n\n\nexport default function Footer () {\n  const classes = useStyles()\n  return (\n    <Typography variant='subtitle1' color='primary' style={{ paddingTop: '100px' }}>\n      Built and Designed by Bill Watters 2021\n    </Typography>\n  )\n}","/home/bill/portfolio/src/theme/theme.ts",[],"/home/bill/portfolio/src/config.ts",[],"/home/bill/portfolio/src/hooks/useWindowSize.tsx",[],"/home/bill/portfolio/src/componets/LanguageTiles.tsx",["121","122"],"import React, { useState } from 'react';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core'\nimport Grid, { GridSpacing } from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { skills } from '../config'\nimport { theme } from '../theme/theme'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    paper: {\n      height: 140,\n      width: 120,\n      backgroundColor: 'transparent',\n      display: 'flex',\n      flexDirection: 'column',\n      margin: 'auto',\n    },\n    control: {\n      padding: theme.spacing(2),\n    },\n    skill: {\n      color: `${theme.palette.primary.contrastText}`,\n      display: 'flex',\n      justifyContent: 'center',\n    },\n    skillIcon: {\n      height: '100px',\n      width: '100%',\n      mixBlendMode: 'screen',\n      '&:hover': {\n        transform: 'translateY(-8px)',\n      },\n    },\n  }),\n);\n\nexport default function LanguageTiles() {\n  const classes = useStyles(theme);\n  const [showText, setShowText] = useState(\"\")\n\n  return (\n    <Grid container justify=\"center\" spacing={0} style={{ marginTop: '15px' }}>\n      {skills.map((skill, index) => (\n        <Grid item key={index} xs={4} style={{ height: '140px' }}>\n          <div className={classes.paper}>\n            <>\n              <img src={skill.icon} alt={`${skill.title} Icon`} className={classes.skillIcon} onMouseOver={() => setShowText(skill.title)} onMouseLeave={() => setShowText(\"\")}/>\n              {showText === skill.title && \n              <Typography variant='h4' className={classes.skill} \n              style={skill.title === 'Ruby on Rails' ? { marginTop: '-10px' } : { marginTop: '-5px' } }>\n                {skill.title}\n              </Typography>}\n            </>\n          </div>\n        </Grid>\n      ))}\n    </Grid>\n  );\n}","/home/bill/portfolio/src/hooks/useElementSize.tsx",[],"/home/bill/portfolio/src/hooks/useEventListener.tsx",[],"/home/bill/portfolio/src/hooks/useIntersection.tsx",["123"],{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","severity":1,"message":"129","line":2,"column":10,"nodeType":"130","messageId":"131","endLine":2,"endColumn":20},{"ruleId":"128","severity":1,"message":"132","line":65,"column":10,"nodeType":"130","messageId":"131","endLine":65,"endColumn":18},{"ruleId":"128","severity":1,"message":"133","line":65,"column":20,"nodeType":"130","messageId":"131","endLine":65,"endColumn":31},{"ruleId":"128","severity":1,"message":"134","line":77,"column":11,"nodeType":"130","messageId":"131","endLine":77,"endColumn":16},{"ruleId":"128","severity":1,"message":"135","line":5,"column":10,"nodeType":"130","messageId":"131","endLine":5,"endColumn":15},{"ruleId":"128","severity":1,"message":"136","line":42,"column":5,"nodeType":"130","messageId":"131","endLine":42,"endColumn":15},{"ruleId":"128","severity":1,"message":"137","line":43,"column":5,"nodeType":"130","messageId":"131","endLine":43,"endColumn":15},{"ruleId":"128","severity":1,"message":"138","line":44,"column":5,"nodeType":"130","messageId":"131","endLine":44,"endColumn":15},{"ruleId":"128","severity":1,"message":"129","line":1,"column":18,"nodeType":"130","messageId":"131","endLine":1,"endColumn":28},{"ruleId":"128","severity":1,"message":"139","line":1,"column":17,"nodeType":"130","messageId":"131","endLine":1,"endColumn":26},{"ruleId":"128","severity":1,"message":"129","line":1,"column":10,"nodeType":"130","messageId":"131","endLine":1,"endColumn":20},{"ruleId":"128","severity":1,"message":"140","line":1,"column":22,"nodeType":"130","messageId":"131","endLine":1,"endColumn":27},{"ruleId":"141","severity":1,"message":"142","line":58,"column":11,"nodeType":"143","endLine":58,"endColumn":97},{"ruleId":"128","severity":1,"message":"144","line":3,"column":8,"nodeType":"130","messageId":"131","endLine":3,"endColumn":20},{"ruleId":"128","severity":1,"message":"145","line":2,"column":22,"nodeType":"130","messageId":"131","endLine":2,"endColumn":28},{"ruleId":"128","severity":1,"message":"146","line":9,"column":9,"nodeType":"130","messageId":"131","endLine":9,"endColumn":16},{"ruleId":"128","severity":1,"message":"147","line":4,"column":16,"nodeType":"130","messageId":"131","endLine":4,"endColumn":27},{"ruleId":"128","severity":1,"message":"140","line":5,"column":8,"nodeType":"130","messageId":"131","endLine":5,"endColumn":13},{"ruleId":"148","severity":1,"message":"149","line":18,"column":8,"nodeType":"150","endLine":18,"endColumn":10,"suggestions":"151"},"no-native-reassign",["152"],"no-negated-in-lhs",["153"],"@typescript-eslint/no-unused-vars","'Typography' is defined but never used.","Identifier","unusedVar","'isLoaded' is assigned a value but never used.","'setIsLoaded' is assigned a value but never used.","'width' is assigned a value but never used.","'theme' is defined but never used.","'inViewport' is assigned a value but never used.","'enterCount' is assigned a value but never used.","'leaveCount' is assigned a value but never used.","'useEffect' is defined but never used.","'Paper' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'LinkedInIcon' is defined but never used.","'Button' is defined but never used.","'classes' is assigned a value but never used.","'GridSpacing' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'element' and 'rootMargin'. Either include them or remove the dependency array.","ArrayExpression",["154"],"no-global-assign","no-unsafe-negation",{"desc":"155","fix":"156"},"Update the dependencies array to be: [element, rootMargin]",{"range":"157","text":"158"},[555,557],"[element, rootMargin]"]